HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	reg16.vhd
	{
		reg16 [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			31 [] [];
		}
	}
	reg12.vhd
	{
		reg12 [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			27 [] [];
		}
	}
	mux81.vhd
	{
		mux81 [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			26 [] [];
		}
	}
	encoder.vhd
	{
		encoder [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			25 [] [];
		}
	}
	decoder416.vhd
	{
		decoder416 [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			24 [] [];
		}
	}
	decoder38.vhd
	{
		decoder38 [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			23 [] [];
		}
	}
	counter.vhd
	{
		counter [n=4] [U5125632.DLS,U9092257.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			18 [n=4] [];
		}
	}
	muxlut.tdf
	{
		muxlut [CASCADE_CHAIN,LOCAL=0,REM_LATENCY,LATENCY,TOT_LEVELS,LEVEL,SIZE,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,altshift.inc]
		{
			39 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=1,LEVEL=0,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
			17 [CASCADE_CHAIN=MANUAL,LOCAL=0,LATENCY=0,TOT_LEVELS=1,LEVEL=0,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [LPM_PIPELINE=0,LPM_WIDTHS,LPM_SIZE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,bypassff.inc,altshift.inc]
		{
			15 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data1_15,data1_14,data1_13,data1_12,data1_11,data1_10,data1_9,data1_8,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_15,data0_14,data0_13,data0_12,data0_11,data0_10,data0_9,data0_8,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel0];
		}
	}
	lpm_decode.tdf
	{
		lpm_decode [DEVICE_FAMILY,CASCADE_CHAIN=MANUAL,LPM_PIPELINE=0,LPM_DECODES,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,altshift.inc,lpm_compare.inc,lpm_constant.inc,aglobal.inc]
		{
			38 [DEVICE_FAMILY=FLEX10KE,CASCADE_CHAIN=IGNORE,LPM_PIPELINE=0,LPM_DECODES=2,LPM_WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq1,eq0,data0,enable];
			13 [DEVICE_FAMILY=FLEX10KE,CASCADE_CHAIN=MANUAL,LPM_PIPELINE=0,LPM_DECODES=2,LPM_WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq1,eq0,data0,enable];
		}
	}
	altram.tdf
	{
		altram [DEVICE_FAMILY,USE_EAB=ON,REGISTERINPUTMODE=DEFAULT,FILE=NO_FILE,NUMWORDS,AD_WIDTH,WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [memmodes.inc,lpm_decode.inc,lpm_mux.inc,aglobal.inc]
		{
			12 [DEVICE_FAMILY=FLEX10KE,USE_EAB=ON,REGISTERINPUTMODE=ALL,FILE=NO_FILE,NUMWORDS=4096,AD_WIDTH=12,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q15,Q14,Q13,Q12,Q11,Q10,Q9,Q8,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,WE,Data15,Data14,Data13,Data12,Data11,Data10,Data9,Data8,Data7,Data6,Data5,Data4,Data3,Data2,Data1,Data0,Address11,Address10,Address9,Address8,Address7,Address6,Address5,Address4,Address3,Address2,Address1,Address0,ClockI,ClockO];
		}
	}
	lpm_ram_dq.tdf
	{
		lpm_ram_dq [DEVICE_FAMILY,LPM_FILE=NO_FILE,LPM_OUTDATA=REGISTERED,LPM_ADDRESS_CONTROL=REGISTERED,LPM_INDATA=REGISTERED,LPM_NUMWORDS,LPM_WIDTHAD,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [altram.inc,lpm_mux.inc,lpm_decode.inc,aglobal.inc]
		{
			11 [DEVICE_FAMILY=FLEX10KE,LPM_FILE=NO_FILE,LPM_OUTDATA=REGISTERED,LPM_ADDRESS_CONTROL=REGISTERED,LPM_INDATA=REGISTERED,LPM_NUMWORDS=0,LPM_WIDTHAD=12,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q0,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,q13,q14,q15,we,outclock,inclock,address0,address1,address2,address3,address4,address5,address6,address7,address8,address9,address10,address11,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15];
		}
	}
	ram.vhd
	{
		ram [] [U9234712.DLS,U9587408.DLS,U5125632.DLS,U9092257.DLS,U1546459.DLS,U3031072.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			10 [] [];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			30 [DEPTH=0,WIDTH=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			21 [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result3,result2,result1,result0,data3,data2,data1,data0];
			16 [DEPTH=0,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			14 [DEPTH=0,WIDTH=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result1,result0,data1,data0];
			9 [DEPTH=0,WIDTH=17,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data16,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			6 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
			5 [DEPTH=0,WIDTH=18,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data17,data16,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
		}
	}
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc,aglobal.inc]
		{
			46 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa15,dataa14,dataa13,dataa12,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab15,datab14,datab13,datab12,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			44 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			41 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result3,result2,result1,result0,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0,cin];
			37 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=17,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa16,dataa15,dataa14,dataa13,dataa12,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab16,datab15,datab14,datab13,datab12,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			35 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=18,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa17,dataa16,dataa15,dataa14,dataa13,dataa12,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab17,datab16,datab15,datab14,datab13,datab12,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			33 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,CONSTANT_CIN=0,width=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa15,dataa14,dataa13,dataa12,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab15,datab14,datab13,datab12,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			29 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,CONSTANT_CIN=0,width=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			20 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,CONSTANT_CIN=0,width=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result3,result2,result1,result0,dataa3,dataa2,dataa1,dataa0,datab3,datab2,datab1,datab0,cin];
			8 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,CONSTANT_CIN=0,width=17,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa16,dataa15,dataa14,dataa13,dataa12,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab16,datab15,datab14,datab13,datab12,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			4 [DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,CONSTANT_CIN=0,width=18,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa17,dataa16,dataa15,dataa14,dataa13,dataa12,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab17,datab16,datab15,datab14,datab13,datab12,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc,aglobal.inc]
		{
			45 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT15,RESULT14,RESULT13,RESULT12,RESULT11,RESULT10,RESULT9,RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB15,DATAB14,DATAB13,DATAB12,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA15,DATAA14,DATAA13,DATAA12,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			43 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT11,RESULT10,RESULT9,RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			42 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB3,DATAB2,DATAB1,DATAB0,DATAA3,DATAA2,DATAA1,DATAA0];
			40 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB3,DATAB2,DATAB1,DATAB0,DATAA3,DATAA2,DATAA1,DATAA0];
			36 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=17,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,cin,DATAB16,DATAB15,DATAB14,DATAB13,DATAB12,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA16,DATAA15,DATAA14,DATAA13,DATAA12,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			34 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=18,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,cin,DATAB17,DATAB16,DATAB15,DATAB14,DATAB13,DATAB12,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA17,DATAA16,DATAA15,DATAA14,DATAA13,DATAA12,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			32 [STYLE=WYSIWYG,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT15,RESULT14,RESULT13,RESULT12,RESULT11,RESULT10,RESULT9,RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB15,DATAB14,DATAB13,DATAB12,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA15,DATAA14,DATAA13,DATAA12,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			28 [STYLE=WYSIWYG,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=12,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT11,RESULT10,RESULT9,RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			22 [STYLE=WYSIWYG,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB3,DATAB2,DATAB1,DATAB0,DATAA3,DATAA2,DATAA1,DATAA0];
			19 [STYLE=WYSIWYG,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB3,DATAB2,DATAB1,DATAB0,DATAA3,DATAA2,DATAA1,DATAA0];
			7 [STYLE=WYSIWYG,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=17,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,cin,DATAB16,DATAB15,DATAB14,DATAB13,DATAB12,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA16,DATAA15,DATAA14,DATAA13,DATAA12,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			3 [STYLE=WYSIWYG,DEVICE_FAMILY=FLEX10KE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=MANUAL,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=18,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT17,result16,result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,cin,DATAB17,DATAB16,DATAB15,DATAB14,DATAB13,DATAB12,DATAB11,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA17,DATAA16,DATAA15,DATAA14,DATAA13,DATAA12,DATAA11,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
		}
	}
	adder.vhd
	{
		adder [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			2 [] [];
		}
	}
	alu.vhd
	{
		alu [] [U9234712.DLS,U9587408.DLS,U5125632.DLS,U9092257.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			1 [] [];
		}
	}
	computer.vhd
	{
		computer [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			0 [] [];
		}
	}
}
TREE
{
	computer::(0,0):(0): computer.vhd
	{
		alu:1:(176,17):(2758,alunit): alu.vhd
		{
			adder:2:(33,18):(20413,ADDUnit): adder.vhd
			{
				lpm_add_sub:34:(29,1):(187): lpm_add_sub.tdf
				{
					addcore:35:(212,4):(88,adder): addcore.tdf;
					altshift:5:(222,2):(149,result_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(191,carry_ext_latency_ffs): altshift.tdf;
					altshift:6:(226,2):(199,oflow_ext_latency_ffs): altshift.tdf;
				}
				lpm_add_sub:36:(29,1):(204): lpm_add_sub.tdf
				{
					addcore:37:(212,4):(85,adder): addcore.tdf;
					altshift:9:(222,2):(143,result_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(183,carry_ext_latency_ffs): altshift.tdf;
					altshift:6:(226,2):(191,oflow_ext_latency_ffs): altshift.tdf;
				}
			}
		}
		ram:10:(178,18):(2759,memunit): ram.vhd
		{
			lpm_ram_dq:11:(29,11):(48,inst_1): lpm_ram_dq.tdf
			{
				altram:12:(69,5):(74,sram): altram.tdf
				{
					lpm_decode:38:(123,4):(75,decoder): lpm_decode.tdf
					{
						altshift:14:(76,2):(34,external_latency_ffs): altshift.tdf;
					}
					lpm_mux:15:(125,4):(85,mux): lpm_mux.tdf
					{
						altshift:16:(89,2):(79,external_latency_ffs): altshift.tdf;
						muxlut:39:(182,21):(117): muxlut.tdf;
						muxlut:39:(182,21):(132): muxlut.tdf;
						muxlut:39:(182,21):(147): muxlut.tdf;
						muxlut:39:(182,21):(162): muxlut.tdf;
						muxlut:39:(182,21):(177): muxlut.tdf;
						muxlut:39:(182,21):(192): muxlut.tdf;
						muxlut:39:(182,21):(207): muxlut.tdf;
						muxlut:39:(182,21):(222): muxlut.tdf;
						muxlut:39:(182,21):(237): muxlut.tdf;
						muxlut:39:(182,21):(252): muxlut.tdf;
						muxlut:39:(182,21):(267): muxlut.tdf;
						muxlut:39:(182,21):(282): muxlut.tdf;
						muxlut:39:(182,21):(297): muxlut.tdf;
						muxlut:39:(182,21):(312): muxlut.tdf;
						muxlut:39:(182,21):(327): muxlut.tdf;
						muxlut:39:(182,21):(342): muxlut.tdf;
					}
				}
			}
		}
		counter:18:(180,19):(2760,seqcount): counter.vhd
		{
			lpm_add_sub:40:(29,9):(43): lpm_add_sub.tdf
			{
				addcore:41:(212,4):(46,adder): addcore.tdf;
				altshift:21:(222,2):(65,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(79,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(87,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:42:(32,13):(67): lpm_add_sub.tdf
			{
				addcore:41:(212,4):(46,adder): addcore.tdf;
				altshift:21:(222,2):(65,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(79,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(87,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		decoder38:23:(182,17):(2761,insdec): decoder38.vhd;
		decoder416:24:(184,17):(2762,tdec): decoder416.vhd;
		encoder:25:(185,17):(2763,enc): encoder.vhd;
		mux81:26:(187,17):(2764,cbus): mux81.vhd;
		reg12:27:(191,17):(2765,ar): reg12.vhd
		{
			lpm_add_sub:43:(33,13):(194): lpm_add_sub.tdf
			{
				addcore:44:(212,4):(70,adder): addcore.tdf;
				altshift:30:(222,2):(113,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(143,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(151,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		reg12:27:(192,17):(2766,pc): reg12.vhd
		{
			lpm_add_sub:43:(33,13):(194): lpm_add_sub.tdf
			{
				addcore:44:(212,4):(70,adder): addcore.tdf;
				altshift:30:(222,2):(113,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(143,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(151,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		reg16:31:(193,17):(2767,dr): reg16.vhd
		{
			lpm_add_sub:45:(35,13):(577): lpm_add_sub.tdf
			{
				addcore:46:(212,4):(82,adder): addcore.tdf;
				altshift:16:(222,2):(137,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(175,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(183,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		reg16:31:(194,17):(2768,ac): reg16.vhd
		{
			lpm_add_sub:45:(35,13):(577): lpm_add_sub.tdf
			{
				addcore:46:(212,4):(82,adder): addcore.tdf;
				altshift:16:(222,2):(137,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(175,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(183,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		reg16:31:(195,17):(2769,ir): reg16.vhd
		{
			lpm_add_sub:45:(35,13):(577): lpm_add_sub.tdf
			{
				addcore:46:(212,4):(82,adder): addcore.tdf;
				altshift:16:(222,2):(137,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(175,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(183,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		reg16:31:(196,17):(2770,tr): reg16.vhd
		{
			lpm_add_sub:45:(35,13):(577): lpm_add_sub.tdf
			{
				addcore:46:(212,4):(82,adder): addcore.tdf;
				altshift:16:(222,2):(137,result_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(175,carry_ext_latency_ffs): altshift.tdf;
				altshift:6:(226,2):(183,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
	}
}
